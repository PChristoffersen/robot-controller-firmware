/**
 * BSD 3-Clause License
 * 
 * Copyright (c) 2025, Peter Christoffersen
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#pragma once

#include <stdint.h>

#if CONFIG_SHIELD_ROBOT_CONTROLLER_STANDALONE
#define CONTROLLER_BUTTON_COUNT 11
#define CONTROLLER_LED_COUNT 6
#define CONTROLLER_BUTTON_1_USAGE HID_USAGE_EXTRA_BUTTON_1
#define CONTROLLER_BUTTON_2_USAGE HID_USAGE_EXTRA_BUTTON_2
#define CONTROLLER_BUTTON_3_USAGE HID_USAGE_EXTRA_BUTTON_3
#define CONTROLLER_BUTTON_4_USAGE HID_USAGE_EXTRA_BUTTON_4
#define CONTROLLER_BUTTON_5_USAGE HID_USAGE_EXTRA_BUTTON_5
#define CONTROLLER_BUTTON_6_USAGE HID_USAGE_EXTRA_BUTTON_6
#define CONTROLLER_LED_1_USAGE HID_USAGE_LED_PLAYER1
#define CONTROLLER_LED_2_USAGE HID_USAGE_LED_PLAYER2
#define CONTROLLER_LED_3_USAGE HID_USAGE_LED_PLAYER3
#define CONTROLLER_LED_4_USAGE HID_USAGE_LED_PLAYER4
#define CONTROLLER_LED_5_USAGE HID_USAGE_LED_LINUX_SLEEP
#define CONTROLLER_LED_6_USAGE HID_USAGE_LED_LINUX_MUTE
#endif
#if CONFIG_SHIELD_ROBOT_CONTROLLER_EMBEDDED
#define CONTROLLER_BUTTON_COUNT 9
#define CONTROLLER_LED_GPIO_COUNT 2
#define CONTROLLER_LED_COUNT 4
#define CONTROLLER_BUTTON_1_USAGE HID_USAGE_EXTRA_BUTTON_1
#define CONTROLLER_BUTTON_2_USAGE HID_USAGE_EXTRA_BUTTON_2
#define CONTROLLER_BUTTON_3_USAGE HID_USAGE_GAMEPAD_BUTTON_MODE
#define CONTROLLER_BUTTON_4_USAGE HID_USAGE_GAMEPAD_BUTTON_START
#define CONTROLLER_LED_1_USAGE HID_USAGE_LED_LINUX_SLEEP
#define CONTROLLER_LED_2_USAGE HID_USAGE_LED_LINUX_MUTE
#define CONTROLLER_LED_3_USAGE HID_USAGE_LED_LINUX_MISC
#define CONTROLLER_LED_4_USAGE HID_USAGE_LED_LINUX_MAIL
#endif

#define CONTROLLER_WS2812_COUNT 4

#define CONTROLLER_AXIS_MIN -2048
#define CONTROLLER_AXIS_MAX 2047
#define CONTROLLER_AXIS_COUNT 6
#define CONTROLLER_AXIS_CHANGE_THRESHOLD 10
#define CONTROLLER_AXIS_DEADZONE 130
#define CONTROLLER_AXIS_Z_DEADZONE 160

#define CONTROLLER_DIAL_MIN -7
#define CONTROLLER_DIAL_MAX 7


/*
 * Controller dimensions
 */
#define UM_PER_MM 1000

#define CONTROLLER_POD_WIDTH_MM 82
#define CONTROLLER_DEPTH_MM 130

#define CONTROLLER_LED_STRIP_DISTANCE_MM 13

#if CONFIG_SHIELD_ROBOT_CONTROLLER_STANDALONE
#define CONTROLLER_CENTER_WIDTH_MM 80
#define CONTROLLER_WIDTH_MM (CONTROLLER_CENTER_WIDTH_MM + 2*CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_STRIP_X_OFFSET_MM (21+CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_STRIP_Y_OFFSET_MM (18)
#define CONTROLLER_LED_STRIP_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_1_X_OFFSET_MM (27+CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_BUTTON_1_Y_OFFSET_MM (73)
#define CONTROLLER_LED_BUTTON_1_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_2_X_OFFSET_MM (CONTROLLER_WIDTH_MM-CONTROLLER_LED_BUTTON_1_X_OFFSET_MM)
#define CONTROLLER_LED_BUTTON_2_Y_OFFSET_MM CONTROLLER_LED_BUTTON_1_Y_OFFSET_MM
#define CONTROLLER_LED_BUTTON_2_Z_OFFSET_MM CONTROLLER_LED_BUTTON_1_Z_OFFSET_MM
#define CONTROLLER_LED_BUTTON_3_X_OFFSET_MM (18+CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_BUTTON_3_Y_OFFSET_MM (97)
#define CONTROLLER_LED_BUTTON_3_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_4_X_OFFSET_MM (CONTROLLER_WIDTH_MM-CONTROLLER_LED_BUTTON_3_X_OFFSET_MM)
#define CONTROLLER_LED_BUTTON_4_Y_OFFSET_MM CONTROLLER_LED_BUTTON_3_Y_OFFSET_MM
#define CONTROLLER_LED_BUTTON_4_Z_OFFSET_MM CONTROLLER_LED_BUTTON_3_Z_OFFSET_MM
#define CONTROLLER_LED_INDICATOR_1_X_OFFSET_MM (50+CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_INDICATOR_1_Y_OFFSET_MM (18)
#define CONTROLLER_LED_INDICATOR_1_Z_OFFSET_MM 0
#define CONTROLLER_LED_INDICATOR_2_X_OFFSET_MM (16+CONTROLLER_LED_INDICATOR_1_X_OFFSET_MM)
#define CONTROLLER_LED_INDICATOR_2_Y_OFFSET_MM CONTROLLER_LED_INDICATOR_1_Y_OFFSET_MM
#define CONTROLLER_LED_INDICATOR_2_Z_OFFSET_MM CONTROLLER_LED_INDICATOR_1_Z_OFFSET_MM
#endif
#if CONFIG_SHIELD_ROBOT_CONTROLLER_EMBEDDED
#define CONTROLLER_CENTER_WIDTH_MM 160
#define CONTROLLER_WIDTH_MM (CONTROLLER_CENTER_WIDTH_MM + 2*CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_BUTTON_ROW_Y_OFFSET_MM 18
#define CONTROLLER_LED_STRIP_X_OFFSET_MM (36+CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_STRIP_Y_OFFSET_MM CONTROLLER_BUTTON_ROW_Y_OFFSET_MM
#define CONTROLLER_LED_STRIP_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_1_X_OFFSET_MM (18+CONTROLLER_POD_WIDTH_MM)  
#define CONTROLLER_LED_BUTTON_1_Y_OFFSET_MM CONTROLLER_BUTTON_ROW_Y_OFFSET_MM
#define CONTROLLER_LED_BUTTON_1_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_2_X_OFFSET_MM (106+CONTROLLER_POD_WIDTH_MM)
#define CONTROLLER_LED_BUTTON_2_Y_OFFSET_MM CONTROLLER_BUTTON_ROW_Y_OFFSET_MM
#define CONTROLLER_LED_BUTTON_2_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_3_X_OFFSET_MM (18+CONTROLLER_LED_BUTTON_2_X_OFFSET_MM)
#define CONTROLLER_LED_BUTTON_3_Y_OFFSET_MM CONTROLLER_BUTTON_ROW_Y_OFFSET_MM
#define CONTROLLER_LED_BUTTON_3_Z_OFFSET_MM 0
#define CONTROLLER_LED_BUTTON_4_X_OFFSET_MM (18+CONTROLLER_LED_BUTTON_3_X_OFFSET_MM)
#define CONTROLLER_LED_BUTTON_4_Y_OFFSET_MM CONTROLLER_BUTTON_ROW_Y_OFFSET_MM
#define CONTROLLER_LED_BUTTON_4_Z_OFFSET_MM 0
#endif
#define CONTROLLER_HEIGHT_MM 60




void controller_reset();
void controller_set_enabled(bool enabled);
void controller_set_suspend(bool enabled);

int controller_set_output(const uint8_t *buffer, uint16_t bufsize);
void controller_set_idle(const uint32_t duration);
uint32_t controller_get_idle();

void controller_set_autonomous_mode(bool autonomous);
bool controller_is_autonomous_mode();
void controller_input_report_done();
